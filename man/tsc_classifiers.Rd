% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsc_classifiers.R
\name{tsc_classifiers}
\alias{tsc_classifiers}
\title{Return available classifiers}
\usage{
tsc_classifiers()
}
\value{
[`character`]
}
\description{
Run `tsc_classifiers()` to obtain available classifiers.
}
\details{
The following classifiers are available: \cr
**Ensemble Classifiers**
\itemize{

\item `timeseriesweka.classifiers.ElasticEnsemble` \cr
   Combination of nearest neighbour (NN) classifiers that use elastic distance measures \cr
   Hyperparameters: *None*

\item `timeseriesweka.classifiers.FlatCote` \cr
   Collective of Transformation Ensembles (Bagnall et al.,2015) \cr
   Hyperparameters: *None*

Baselearners of ElasticEnsemble: \cr

`timeseriesweka.classifiers.ensembles.elastic_ensemble.WDTW1NN` \cr
    Elastic Ensemble of Nearest Neighbour Algorithms: \cr
    Weighted Dynamic Time Warping 1 Neares Neighbour \cr
    Hyperparameters: *None*

\item `timeseriesweka.classifiers.ensembles.elastic_ensemble.ED1NN` \cr
   Euclidian distance with 1 nearest neighbor \cr
   Hyperparameters: *None*

\item `timeseriesweka.classifiers.ensembles.elastic_ensemble.DTW1NN` \cr
   Dynamic time warping with 1 nearest neighbor \cr
   Hyperparameters: \cr
   \itemize{
   \item `setWindow`: `double` range: [1, Inf]
   }

\item `timeseriesweka.classifiers.ensembles.elastic_ensemble.ERP1NN` \cr
   edit distance with real penalty with 1 nearest neighbor \cr
   Hyperparameters: *None*

\item `timeseriesweka.classifiers.ensembles.elastic_ensemble.LCSS1NN` \cr
   longest common subsequence with 1 nearest neighbor \cr
   Hyperparameters: *None*

\item `timeseriesweka.classifiers.ensembles.elastic_ensemble.TWE1NN` \cr
   Time Warp Edit with 1 nearest neighbor \cr
   Hyperparameters: *None*

\item `timeseriesweka.classifiers.ensembles.elastic_ensemble.MSM1NN` \cr
   Move-Split-Merge with 1 nearest neighbor \cr
   Hyperparameters: *None*

}

**Differential Distance Based Classifiers** \cr
\itemize{

\item `timeseriesweka.classifiers.NN_CID` \cr
   Complexity Invariant distance with k nearest neighbor \cr
   Hyperparameters: *None*

\item `timeseriesweka.classifiers.DD_DTW` \cr
   Derivative dynamic time warping \cr
   Hyperparameters: *None*

\item `timeseriesweka.classifiers.DTD_C` \cr
   Derivative transform distance \cr
   Hyperparameters: *None*

}

**Dictionary based Classifiers** \cr
\itemize{
  \item `timeseriesweka.classifiers.BOSS` \cr
  Bag of SFA Symbols \cr
  Hyperparameters: \cr
  \itemize{
    \item `setMaxEnsembleSize`: `integer(1)` range: [1, Inf]
    \item `setEnsembleSize`: `integer(1)` range: [1, Inf]
  }

\item `timeseriesweka.classifiers.BagOfPatterns` \cr
  Bag of Patterns \cr
  Hyperparameters: *None* \cr

\item `timeseriesweka.classifiers.SAX_1NN` \cr
  Symbolic Aggregate Approximation \cr
  Hyperparameters: *None* \cr

\item `timeseriesweka.classifiers.SAXVSM` \cr
  Symbolic Aggregate Approximation - Vector Space Model \cr
  Hyperparameters: *None* \cr
}

**Shapelet based Classifiers**
\itemize{
  \item `timeseriesweka.classifiers.ShapeletTransformClassifier` \cr
  Shapelet transformation that separates the shapelet discovery from the classifier by
  finding the top k shapelets in a single run \cr
  Hyperparameters:
  \itemize{
    \item `setTransformType`: character(1) \cr
      values: "univariate","uni","shapeletd","shapeleti"
    \item `setNumberOfShapelets`: `integer(1)` range: [1, Inf]
  }

\item `timeseriesweka.classifiers.FastShapelets` \cr
  Fast Shapelets (FS) \cr
  Hyperparameters: *None* \cr

\item `timeseriesweka.classifiers.LearnShapelets` \cr
  Learned Shapelets (LS): \cr
  Hyperparameters: *None* \cr

}

**Interval based Classifiers** \cr
\itemize{
  \item `timeseriesweka.classifiers.TSF` \cr
  Time Series Forest (Deng et al.,2013) \cr
  Hyperparameters: \cr
  \itemize{
    \item `setNumTrees`: `integer(1)` range: [1, Inf]
  }

\item `timeseriesweka.classifiers.TSBF` \cr
  Time Series Bag of Features (TSBF) \cr
  Hyperparameters: \cr
  \itemize{
    \item `setZLevel`: `double(1)`
  }

\item `timeseriesweka.classifiers.LPS` \cr
  Learned Pattern Similarity (LPS) \cr
  Hyperparameters: *None* \cr
}

**Time Series Classifier** \cr
\itemize{
  \item `timeseriesweka.classifiers.DTW_kNN` \cr
  specialisation of kNN that can only be used with the efficient DTW distance \cr
  Hyperparameters: \cr
  \itemize{
    \item `setMaxR`: `double(1)` range: [0, 1] set max window size
  }

\item `timeseriesweka.classifiers.FastDTW_1NN` \cr
  fast Dynamic time warping with 1 nearest neighbor \cr
  Hyperparameters: \cr
  \itemize{
    \item `setR`: `double(1)`
  }

\item `timeseriesweka.classifiers.SlowDTW_1NN` \cr
  compare with FastDTW_1NN \cr
  Hyperparameters: \cr
  \itemize{
    \item `setR`: `double(1)`
  }
}

**Weka Classifiers** \cr
Several WEKA classifiers have been implemented in the Time-Series Classification
Bake-off. \cr
The use of those classifiers is discouraged from within TSClassification,
but nonetheless implemented for completeness. \cr
We advise to use the official implementations from package [RWeka] for greater
flexibility and improved support for setting hyperparameters. \cr
\itemize{
  \item weka.classifiers.functions.Logistic
  \item weka.classifiers.bayes.BayesNet
  \item weka.classifiers.bayes.NaiveBayes
  \item weka.classifiers.functions.Logistic
  \item weka.classifiers.functions.MultilayerPerceptron
  \item weka.classifiers.functions.SMO
  \item weka.classifiers.meta.RotationForest
  \item weka.classifiers.trees.J48
  \item weka.classifiers.trees.RandomForest
}
}
